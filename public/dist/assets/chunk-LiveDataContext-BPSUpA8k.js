import{R as o,j as v,r as s}from"./entry-index-Cq13IMyc.js";const w=o.createContext(void 0),m=({children:t})=>{const[d,n]=o.useState(null),[f,a]=o.useState(!1),[r,c]=o.useState(null),l=()=>{a(!0),c(null),fetch("/api/nodes").then(e=>{if(!e.ok)throw new Error("Failed to fetch node data");return e.json()}).then(e=>{e&&Array.isArray(e.data)?(console.log(e.data),n(e.data)):n([])}).catch(e=>{c(e.message||"An error occurred while fetching data")}).finally(()=>{a(!1)})};return o.useEffect(()=>{l()},[]),v.jsx(w.Provider,{value:{nodeList:d,isLoading:f,error:r,refresh:l},children:t})},E=()=>{const t=o.useContext(w);if(!t)throw new Error("useNodeList must be used within a NodeListProvider");return t},L=s.createContext({live_data:null,showCallout:!0,onRefresh:()=>{}}),N=({children:t})=>{const[d,n]=s.useState(null),[f,a]=s.useState(!1),[r]=s.useState(new Set),c=e=>{r.add(e)},l=e=>{r.forEach(i=>i(e))};return s.useEffect(()=>{let e=null,i;const h=()=>{e=new WebSocket(window.location.protocol.replace("http","ws")+"//"+window.location.host+"/api/clients"),e.onopen=()=>{a(!0)},e.onmessage=S=>{try{const u=JSON.parse(S.data);n(u),l(u)}catch(u){console.error(u)}},e.onerror=()=>{e==null||e.close()},e.onclose=()=>{a(!1),i=window.setTimeout(h,2e3)}};h();const x=window.setInterval(()=>{e&&e.readyState===WebSocket.OPEN&&e.send("get")},2e3);return()=>{clearInterval(x),clearTimeout(i),e==null||e.close()}},[]),v.jsx(L.Provider,{value:{live_data:d,showCallout:f,onRefresh:c},children:t})},g=()=>s.useContext(L);export{N as L,m as N,E as a,g as u};
